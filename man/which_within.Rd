% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/which_within.R
\name{which_within}
\alias{which_within}
\title{Which points are within a radius of each other?}
\usage{
which_within(lat, lon, radius = "1 km", latlonsorted = NA, lambda0 = mean(lon))
}
\arguments{
\item{lat, lon}{Numeric vectors of equal length defining the latitude
and longitude of the points. Must be sorted by latitude then by longitude.

Long vectors not supported.}

\item{radius}{Either a single number designating the desired radius
in kilometres or a string specifying the same.}

\item{latlonsorted}{A logical vector of length 1 or 2 indicating
whether it is known whether \code{lat,lon} are known to already be sorted.
If \code{NA}, the default, then the vectors are checked, with an error
if unsorted.}

\item{lambda0}{Passed to the sinusoidal projection. Defaults to the
median of \code{lon}. Use to indicate the longitude at which distortion
should be zero (and smaller the the closer the longitude).}
}
\value{
A \code{data.table} of two integer columns, \code{orig} and \code{dest},
the indices of \code{lat,lon}
}
\description{
Used to approiximately but relatively quickly
identify among a collection of coordinates which are within
a certain radius.
}
\examples{
library(data.table)
DT <- data.table(lat = runif(1000, -35, -34),
                 lon = runif(1000, 150, 151))
setkey(DT, lat, lon)
DT[, which_within(lat, lon, lambda0 = 150.5)]
DT[, which_within(lat, lon, radius = "150 m")]




}
